"use strict";exports.id=44,exports.ids=[44],exports.modules={56249:(e,t)=>{Object.defineProperty(t,"l",{enumerable:!0,get:function(){return function hoist(e,t){return t in e?e[t]:"then"in e&&"function"==typeof e.then?e.then(e=>hoist(e,t)):"function"==typeof e&&"default"===t?e:void 0}}})},47153:(e,t)=>{var s;Object.defineProperty(t,"x",{enumerable:!0,get:function(){return s}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(s||(s={}))},71802:(e,t,s)=>{e.exports=s(20145)},47311:(e,t,s)=>{s.d(t,{mD:()=>UpstashRedisAdapter});let n={baseKeyPrefix:"",accountKeyPrefix:"user:account:",accountByUserIdPrefix:"user:account:by-user-id:",emailKeyPrefix:"user:email:",sessionKeyPrefix:"user:session:",sessionByUserIdKeyPrefix:"user:session:by-user-id:",userKeyPrefix:"user:",verificationTokenKeyPrefix:"user:token:"},r=/(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d\.\d+([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))|(\d{4}-[01]\d-[0-3]\dT[0-2]\d:[0-5]\d([+-][0-2]\d:[0-5]\d|Z))/;function hydrateDates(e){return Object.entries(e).reduce((e,[t,s])=>(e[t]=s&&r.test(s)&&!isNaN(Date.parse(s))?new Date(s):s,e),{})}function UpstashRedisAdapter(e,t={}){let s={...n,...t},{baseKeyPrefix:r}=s,a=r+s.accountKeyPrefix,i=r+s.accountByUserIdPrefix,o=r+s.emailKeyPrefix,u=r+s.sessionKeyPrefix,c=r+s.sessionByUserIdKeyPrefix,d=r+s.userKeyPrefix,l=r+s.verificationTokenKeyPrefix,setObjectAsJson=async(t,s)=>await e.set(t,JSON.stringify(s)),setAccount=async(t,s)=>{let n=a+t;return await setObjectAsJson(n,s),await e.set(i+s.userId,n),s},getAccount=async t=>{let s=await e.get(a+t);return s?hydrateDates(s):null},setSession=async(t,s)=>{let n=u+t;return await setObjectAsJson(n,s),await e.set(c+s.userId,n),s},getSession=async t=>{let s=await e.get(u+t);return s?hydrateDates(s):null},setUser=async(t,s)=>(await setObjectAsJson(d+t,s),await e.set(`${o}${s.email}`,t),s),getUser=async t=>{let s=await e.get(d+t);return s?hydrateDates(s):null};return{async createUser(e){let t=crypto.randomUUID();return await setUser(t,{...e,id:t})},getUser,async getUserByEmail(t){let s=await e.get(o+t);return s?await getUser(s):null},async getUserByAccount(e){let t=await getAccount(`${e.provider}:${e.providerAccountId}`);return t?await getUser(t.userId):null},async updateUser(e){let t=e.id,s=await getUser(t);return await setUser(t,{...s,...e})},async linkAccount(e){let t=`${e.provider}:${e.providerAccountId}`;return await setAccount(t,{...e,id:t})},createSession:e=>setSession(e.sessionToken,e),async getSessionAndUser(e){let t=await getSession(e);if(!t)return null;let s=await getUser(t.userId);return s?{session:t,user:s}:null},async updateSession(e){let t=await getSession(e.sessionToken);return t?await setSession(e.sessionToken,{...t,...e}):null},async deleteSession(t){await e.del(u+t)},createVerificationToken:async e=>(await setObjectAsJson(l+e.identifier+":"+e.token,e),e),async useVerificationToken(t){let s=l+t.identifier+":"+t.token,n=await e.get(s);return n?(await e.del(s),hydrateDates(n)):null},async unlinkAccount(t){let s=`${t.provider}:${t.providerAccountId}`,n=await getAccount(s);if(!n)return;let r=`${a}${s}`;await e.del(r,`${i} + ${n.userId}`)},async deleteUser(t){let s=await getUser(t);if(!s)return;let n=i+t,r=await e.get(n),a=c+t,u=await e.get(a);await e.del(d+t,`${o}${s.email}`,r,n,u,a)}}}}};